on:
  workflow_dispatch:
  push:
  create:
  release:
    types: [created]

name: Handle Release
jobs:
  generate:
    if: "${{ ( github.event_name != 'push' ) || startsWith(github.event.head_commit.message, '[[release]]') }}"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        result: [aarch64-gcc, x86_64-gcc, cli, llvm]
    name: ${{ matrix.result }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: setup repo
        run: bash ./.github/scripts/setup-repo
      - name: Get tag
        id: get-tag
        run: |
          cd superconfigure/cosmopolitan
          echo "TAG=$(git describe --tags)" >> "$GITHUB_OUTPUT"
          cd ../..
      - name: Check release file exists
        id: check-release-file-exists
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          RESULT=false
          if gh release view "${{ steps.get-tag.outputs.TAG }}"; then
            RESULT=`gh release view "${{ steps.get-tag.outputs.TAG }}" --json assets --jq '.assets|map(.name)|any(.=="${{ matrix.result }}.zip")'`
          fi
          echo "RESULT=${RESULT}" > "$GITHUB_OUTPUT"
      - name: support ape bins and SSL things
        if: ${{ steps.check-release-file-exists.outputs.RESULT != 'true' }}
        run: bash ./.github/scripts/setup
      - name: build Cosmo
        run: bash ./.github/scripts/cosmo
        if: ${{ steps.check-release-file-exists.outputs.RESULT != 'true' }}
      - name: build ${{ matrix.result }}
        if: ${{ steps.check-release-file-exists.outputs.RESULT != 'true' }}
        env:
          COLLECTION: ${{ matrix.result }}
        run: bash ./.github/scripts/collectbuild ${{ matrix.result }}
      - name: collect into zip
        if: ${{ steps.check-release-file-exists.outputs.RESULT != 'true' }}
        env:
          ZFILENAME: ${{ matrix.result }}
        run: bash ./.github/scripts/collectzip
      - name: Upload binaries to release
        if: ${{ steps.check-release-file-exists.outputs.RESULT != 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ steps.get-tag.outputs.TAG }}"
          files: "./${{ matrix.result }}*.zip"
          fail_on_unmatched_files: true
          prerelease: true
